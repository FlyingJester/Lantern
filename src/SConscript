Import("environment libs is32bit mingw")
import os
import sys

for l in libs:
	print(l)

src = [
    "game.cpp",
    "lantern.cpp",
    "primitives.c",
    "primitives_obj.cpp",
    "draw_text.cpp",
    "room.cpp",
    "cpio.c",
    "lantern_gl.c",
    "lantern_gl_ext.c",
    "turbo_json_helpers.cpp"
]

servers = [
	"texture",
	"room",
	"item",
	"archive"
]

for s in servers:
	src.append("servers/" + s + "s.cpp")

asm_src = []

if not is32bit:
	src.append("init_amd64.asm")

if mingw or os.name == "nt":
	if is32bit:
		src.append("archive_server.c")
	else:
		src.append("archive_server_win64.asm")
else:
	src.append("archive_server.c")

if os.name == "nt" or mingw:
	libs.append("OpenGL32")
	if not mingw:
		libs+=["GDI32.lib", "user32.lib"]
else:
	libs += ["GL", "X11", "Xext", "png"]

lantern = environment.Program("lantern", src, LIBS = libs)

cpio_env = environment.Clone()

if mingw or os.name == "nt":
    if mingw:
    	cpio_env.Append(LINKFLAGS = " -static ")
    cpio = cpio_env.Program("lanterncpio", ["cpio_main.cpp"])

Return("lantern")
